export interface Product {
  masp?: number;
  tensp: string;
  maloai: number;
  thuonghieu: string;
  hinhanh: string;
  gia : number;
  mausac: string;
  kieudang: string;
  kichthuoc: string;
  chatlieu: string;
}

// Ki·ªÉu d·ªØ li·ªáu t·ª´ API
// export interface ProductFromAPI {
//   masp: number;
//   tensp: string;
//   model: string;
//   id_danhmuc?: number;
//   id_thuonghieu?: number;
//   id_xuatxu?: number;
//   id_chatlieu?: number;
//   id_kieudang?: number;
//   mo_ta: string;
//   hinh_anh: string[];
//   san_pham_moi?: number;      // 0 ho·∫∑c 1
//   san_pham_noi_bat?: number;  // 0 ho·∫∑c 1
//   ngay_tao: string;           // ISO string
//   ngay_cap_nhat: string;      // ISO string
//   gia?: number;
// }

// üîπ S·ª≠a c·∫•u tr√∫c specifications ƒë·ªÉ h·ª£p l√Ω v·ªõi k√≠nh m·∫Øt
export interface ProductSpecifications {
  frame: {
    material: string;     // Ch·∫•t li·ªáu g·ªçng: Titan, Nh·ª±a, Kim lo·∫°i
    shape: string;        // H√¨nh d√°ng g·ªçng: tr√≤n, vu√¥ng, aviator
    size: string;         // K√≠ch th∆∞·ªõc: 50-20-140 mm
    weight: string;       // Tr·ªçng l∆∞·ª£ng: 20g
  };
  lenses: {
    type: string;         // Lo·∫°i tr√≤ng: c·∫≠n, r√¢m, ch·ªëng √°nh s√°ng xanh
    coating: string;      // L·ªõp ph·ªß: ch·ªëng UV, ch·ªëng ch√≥i, ch·ªëng tr·∫ßy
    features: string[];   // ƒê·∫∑c ƒëi·ªÉm: Polarized, Blue Cut, ƒë·ªïi m√†u...
  };
  suitability: {
    gender: string;       // Nam/N·ªØ/Unisex
    ageGroup: string;     // Ng∆∞·ªùi l·ªõn, tr·∫ª em
    prescription: boolean; // C√≥ th·ªÉ l·∫Øp tr√≤ng c·∫≠n/vi·ªÖn/lo·∫°n kh√¥ng
  };
  dimensions: {
    lensWidth: string;    // Chi·ªÅu ngang tr√≤ng: 52 mm
    bridge: string;       // C·∫ßu k√≠nh: 18 mm
    templeLength: string; // C√†ng k√≠nh: 140 mm
    weight: string
  };
}

// üîπ Gi·ªØ nguy√™n cho ph√π h·ª£p
export interface ProductColor {
  name: string;  // "ƒêen", "N√¢u g·ªó", "B·∫°c"
  code: string;  // M√£ m√†u hex
  available: boolean;
}

// üîπ Trong k√≠nh => storage = quy c√°ch
export interface ProductStorage {
  size: string;   // "1 c·∫∑p", "Combo 2 k√≠nh", "Size M"
  price: number;
  available: boolean;
}

export interface ProductCategory {
  id: string;
  name: string;
  icon: string;
  count: number;
  subcategories?: ProductCategory[];
}

export interface ProductFilter {
  brand?: string[];
  priceRange?: {
    min: number;
    max: number;
  };
  category?: string[];
  rating?: number;
  inStock?: boolean;
  features?: string[]; // v√≠ d·ª•: ['Polarized', 'Ch·ªëng UV', 'Blue Cut']
}

export interface ProductSort {
  field: 'price' | 'rating' | 'name' | 'createdAt';
  order: 'asc' | 'desc';
}
