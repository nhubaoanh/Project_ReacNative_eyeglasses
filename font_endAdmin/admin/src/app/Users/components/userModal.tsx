"use client";

import { Button, Col, Form, Input, message, Row, Select, Typography } from "antd";
import User from "@/app/types/user";
import { useEffect, useState } from "react";
import Role from "@/app/types/role";
import userService from "@/app/services/user.service";

interface UserModalProps {
    isOpen: boolean;
    onClose : () => void;
    user? : User | null;
    onSave : (values : User) => void;
    loading?: boolean;
}

export const UserModal = ({
    isOpen,
    onClose,
    user,
    onSave,
    loading = false
}: UserModalProps) =>{
  const [form] = Form.useForm<User>();
  const [roles, setRoles] = useState<Role[]>([]); // üëà danh s√°ch vai tr√≤

  const handleSubmit = (values: User) => {
    if (!values) {
      message.error("Kh√¥ng c√≥ d·ªØ li·ªáu ng∆∞·ªùi d√πng!");
      return;
    }
    onSave(values);
  };
  useEffect(() => {
    if (user) {
      form.setFieldsValue({
        ...user,
        manv: user.manv,
        hoten: user.hoten,
        mavt: user.mavt,
        sdt: user.sdt,
        email: user.email,
        lichlv: user.lichlv,
        matkhau: user.matkhau,
      } as any);
    } else {
      form.resetFields();
    }
    const fetchRoles = async () => {
      try {
        const res = await userService.getVaiTro();
        setRoles(res.data || []);
      } catch (err) {
        console.error("L·ªói khi l·∫•y vai tr√≤:", err);
      }
    };
    fetchRoles();
  }, [user, form, isOpen]);

  return (
    <div
      className={`fixed inset-0 bg-black/50 flex items-center justify-center z-50 ${
        isOpen ? "block" : "hidden"
      }`}
    >
      <div className="bg-white p-6 rounded-lg w-2/3">
        <Typography.Title level={4} className="mb-4">
          {user ? "C·∫≠p nh·∫≠t nhan vien" : "Th√™m nhan vien"}
        </Typography.Title>

        <Form form={form} layout="vertical" onFinish={handleSubmit}>
          {/* c√°i n√†y nh·ªõ ph·∫£i nh√©t th√™m m√£ v√†o kh√¥ng th√¨ khoogn update ƒë∆∞·ª£c */}
          <Row gutter={16}>
            <Col>
              <Form.Item
                name="manv"
                // rules={[{ required: true }]}
                style={{ display: "none" }}
              >
                <Input type="hidden" />
              </Form.Item>
            </Col>
            <Col span={12}>
              <Form.Item
                name="hoten"
                label="H·ªç t√™n"
                rules={[{ required: true }]}
              >
                <Input placeholder="Nh·∫≠p t√™n Nh√¢n vi√™n" />
              </Form.Item>
            </Col>
            <Col span={12}>
              <Form.Item name="sdt" label="S·ªë ƒëi·ªán tho·∫°i">
                <Input placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" />
              </Form.Item>
            </Col>
          </Row>

          <Row gutter={16}>
            <Col span={12}>
              <Form.Item name="email" label="Email">
                <Input type="email" placeholder="Nh·∫≠p email" />
              </Form.Item>
            </Col>
            <Col span={12}>
              <Form.Item name="lichlv" label="l·ªãch nh√¢n vi√™n">
                <Input placeholder="Nh·∫≠p l·ªãch nh√¢n vi√™n" />
              </Form.Item>
            </Col>

            <Col span={12}>
              <Form.Item
                name="mavt"
                label="V·ªã tr√≠ / Vai tr√≤"
                rules={[{ required: true, message: "Vui l√≤ng ch·ªçn vai tr√≤" }]}
              >
                <Select placeholder="Ch·ªçn vai tr√≤">
                  {roles.map((r) => (
                    <Select.Option key={r.mavt} value={r.mavt}>
                      {r.tenvt}
                    </Select.Option>
                  ))}
                </Select>
              </Form.Item>
            </Col>
          </Row>

          <Row gutter={16}>
            <Col span={12}>
              <Form.Item name="matkhau" label="m·∫≠t kh·∫©u">
                <Input placeholder="Nh·∫≠p m·∫≠t kh·∫©u" />
              </Form.Item>
            </Col>
          </Row>

          <div className="flex justify-end gap-2 mt-4">
            <Button onClick={onClose}>H·ªßy</Button>
            <Button type="primary" htmlType="submit" loading={loading}>
              L∆∞u
            </Button>
          </div>
        </Form>
      </div>
    </div>
  );
}